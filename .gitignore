*.cursor
*.roo


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.*
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# PyPI configuration file
.pypirc

# FintelligenceAI Specific
# ======================

# Data directories
data/chroma/
data/chroma_dev/
data/uploads/
data/experiments/
data/backups/
data/cache/

# Cache directories
.dspy_cache/
.cache/
.httpx_cache/

# Logs
logs/
*.log
dev-debug.log

# Model artifacts and checkpoints
models/checkpoints/
models/cache/
*.pt
*.pth
*.model
*.pkl

# Vector database files
*.faiss
*.index

# Temporary files
temp/
tmp/
.tmp/
/tmp/test_response

# API keys and secrets
.env.local
.env.production
.env.staging
secrets.json
api_keys.json

# Database files
*.db
*.sqlite
*.sqlite3

# Docker volumes data
postgres_data/
redis_data/
chroma_data/
grafana_data/
prometheus_data/
ollama_data/

# Monitoring and metrics
metrics/
traces/

# Generated reports and outputs
reports/
outputs/
results/
validation_results.json
benchmark_results.json
optimization_results.json

# IDE specific
.vscode/settings.json
.vscode/launch.json
.cursor/
*.swp
*.swo

# OS specific
.DS_Store
Thumbs.db

# Backup files
*.bak
*.backup
*~

# Performance profiling
*.prof
*.profile

# Test artifacts
test_outputs/
coverage_html/
.coverage.*

# Documentation builds
docs/build/
docs/dist/

# Jupyter notebook outputs (keep structure, ignore outputs)
*.ipynb
!notebooks/examples/*.ipynb

# Configuration overrides
config/local.yml
config/dev.yml
config/prod.yml

# SSL certificates and keys
*.pem
*.key
*.crt
*.csr
config/ssl/

# Build artifacts
dist/
build/
*.egg-info/

# Task files
tasks.json
tasks/

# Added by Task Master AI
# Logs
logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
dev-debug.log
# Dependency directories
node_modules/
# Environment variables
# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
# OS specific
.DS_Store
# Task files
tasks.json
tasks/
